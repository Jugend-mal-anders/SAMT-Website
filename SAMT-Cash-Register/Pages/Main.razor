@page "/main/{EventId:int}/{CashboxId:int}"
@using Microsoft.EntityFrameworkCore
@using System.Globalization
@using Database.Models

@inject IDbContextFactory<samt_websiteContext> DbContextFactory

@{
    var context = DbContextFactory.CreateDbContext();
}

<nav class="navbar navbar-dark fixed-bottom bg-success clean-navbar" style="padding-top: 0px;padding-bottom: 0px;">
    <div class="container">
        <button class="navbar-toggler text-center text-white d-xl-flex flex-fill justify-content-xl-center align-items-xl-center" style="font-size: 24px;border-style: none;padding-top: 25px;padding-bottom: 25px;margin-right: 30px;" @onclick="() => { Expand(); money = _products.Sum(x => x.price).ToString(CultureInfo.InvariantCulture); }"><span>@price €</span></button>
        @if (_products.Count != 0)
        {
            <button class="navbar-toggler shadow" data-bs-toggle="collapse" style="background: #146942;" data-bs-target="#navcol-2"><span>@_products.Count</span></button>
        }
        <div class="navbar-collapse bg-white collapse @expanded">
            <ul class="navbar-nav">
                <li class="nav-item text-white" style="padding-right: 0px;">
                    <div class="row" style="height: 100px;">
                        <div class="col"><button class="btn btn-light" type="button" style="width: 100%;font-size: 40px;height: 100%;">@money €</button></div>
                    </div>
                    <div class="row" style="height: 100px;">
                        <div class="col" style="border-right: 1px solid var(--bs-gray) ;border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light" type="button" style="width: 100%;font-size: 24px;height: 100%;" @onclick="() => AddNumber(7)">7</button></div>
                        <div class="col" style="border-right: 1px solid var(--bs-gray) ;border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light" type="button" style="width: 100%;height: 100%;font-size: 24px;" @onclick="() => AddNumber(8)">8</button></div>
                        <div class="col" style="border-right-color: var(--bs-gray);border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light" type="button" style="width: 100%;height: 100%;font-size: 24px;" @onclick="() => AddNumber(9)">9</button></div>
                    </div>
                    <div class="row" style="height: 100px;">
                        <div class="col" style="border-right: 1px solid var(--bs-gray) ;border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light" type="button" style="width: 100%;font-size: 24px;height: 100%;" @onclick="() => AddNumber(4)">4</button></div>
                        <div class="col" style="border-right: 1px solid var(--bs-gray) ;border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light" type="button" style="width: 100%;height: 100%;font-size: 24px;" @onclick="() => AddNumber(5)">5</button></div>
                        <div class="col" style="border-right-color: var(--bs-gray);border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light" type="button" style="width: 100%;height: 100%;font-size: 24px;" @onclick="() => AddNumber(6)">6</button></div>
                    </div>
                    <div class="row" style="height: 100px;">
                        <div class="col" style="border-right: 1px solid var(--bs-gray) ;border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light btn-lg" type="button" style="width: 100%;font-size: 24px;height: 100%;" @onclick="() => AddNumber(1)">1</button></div>
                        <div class="col" style="border-right: 1px solid var(--bs-gray) ;border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light btn-lg" type="button" style="width: 100%;height: 100%;font-size: 24px;" @onclick="() => AddNumber(2)">2</button></div>
                        <div class="col" style="border-right-color: var(--bs-gray);border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light" type="button" style="width: 100%;height: 100%;font-size: 24px;" @onclick="() => AddNumber(3)">3</button></div>
                    </div>
                    <div class="row" style="height: 100px;">
                        <div class="col" style="border-right: 1px solid var(--bs-gray) ;border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light" type="button" style="width: 100%;font-size: 24px;height: 100%;" @onclick="() => AddNumber(0)">0</button></div>
                        <div class="col" style="border-right: 1px solid var(--bs-gray) ;border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light" type="button" style="width: 100%;height: 100%;font-size: 24px;" @onclick="() => AddNumber(-1)">00</button></div>
                        <div class="col" style="border-right-color: var(--bs-gray);border-bottom: 1px solid var(--bs-gray) ;"><button class="btn btn-light" type="button" style="width: 100%;height: 100%;font-size: 24px;" @onclick="() => AddNumber(-2)">C</button></div>
                    </div>
                    <div class="row" style="height: 100px;">
                        <div class="col"><button class="btn btn-light" type="button" style="width: 100%;font-size: 24px;height: 100%;" @onclick="Checkout"><i class="far fa-money-bill-alt" style="font-size: 60px;"></i></button></div>
                    </div>
                </li>
            </ul>
        </div>
        <div class="collapse navbar-collapse bg-dark" id="navcol-2" style="padding-left: 15px;padding-right: 15px;padding-top: 15px;">
            <ul class="navbar-nav">
                <li class="nav-item text-white">
                    <div class="table-responsive">
                        <table class="table table-hover table-dark">
                            <tbody>
                                @foreach (var item in _products.GroupBy(x => x.product.Name).OrderBy(x => x.Key))
                                {
                                    <tr>
                                        <td><strong style="margin-right: 15px;">@item.Count() </strong><span> @item.Key</span></td>
                                        <td class="text-end"><button class="btn btn-danger" type="button" style="margin-right: 10px;" @onclick="() => { _products.Remove(_products.First(x => x.product.Name.Equals(item.Key))); ReloadPrice(); }"><i class="fas fa-minus" style="margin-right: 0px;"></i></button><button class="btn btn-success" type="button"><i class="fas fa-plus" style="margin-right: 0px;" @onclick="() => { _products.Add(_products.First(x => x.product.Name.Equals(item.Key))); ReloadPrice(); }"></i></button></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</nav>
<main class="page catalog-page" style="background: var(--bs-gray-400);min-height: 100%;">
    <section class="clean-block clean-catalog dark" style="background: transparent;">
        <div class="container">
            <div>
                <div class="row">
                    <div class="col">
                        <div class="products">
                            <div class="row g-0" style="border-style: none;">
                                @foreach (var item in context.EventsProducts.Include(x => x.FkProduct).Where(x => x.FkEventId == EventId).AsEnumerable())
                                {
                                    <div class="col-auto m-auto" style="padding-right: 20px;padding-bottom: 20px;">
                                        <a @onclick="() => { _products.Add((item.FkProduct, item.Price ?? item.FkProduct.DefaultPrice)); ReloadPrice(); }">
                                            <div class="clean-product-item" style="box-shadow: 5px 5px 20px;border-radius: 30px;background: var(--bs-gray-300);">
                                                <div class="image"><img class="img-fluid d-block mx-auto" src="@item.FkProduct.ImageLink" style="border-radius: 40px;"></div>
                                                <div class="d-xl-flex justify-content-xl-center product-name"><span style="font-size: 17.8px; color: rgb(88, 88, 88);">@item.FkProduct.Name</span></div>
                                                <div class="justify-content-center about">
                                                    <div class="price">
                                                        <h3>@(item.Price ?? item.FkProduct.DefaultPrice) €</h3>
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

@code {
    [Parameter]
    public int EventId { get; set; }
    
    [Parameter]
    public int CashboxId { get; set; }

    private List<(Product product, double price)> _products = new();

    private string price = "0";
    private string money = "0.00";

    private string expanded = string.Empty;

    private void ReloadPrice()
    {
        price = _products.Sum(x => x.price).ToString(CultureInfo.InvariantCulture);
    }

    private void AddNumber(int number)
    {
        if (double.Parse(money.Replace('.', ',')) == double.Parse(price.Replace('.', ',')))
        {
            money = "0.00";
        }

        if (number == -2)
        {
            money = "0.00";
            return;
        }

        var insert = number.ToString();

        if (number == -1) insert = "00";

        money = money.Replace(".", "");
        money += insert;
        money = money.Insert(money.Length - 2, ".");

        if (money.StartsWith("0"))
        {
            money = money.Remove(0, insert.Length);
        }

        if (money.Length <= 3)
        {
            money = money.Insert(0, "0");
        }
    }

    private void Checkout()
    {
        if (price.Contains("Rückgeld") || price.Contains("Fehlend")) return;

        Expand();

        var numberMoney = double.Parse(money.Replace('.', ','));
        var numberPrice = double.Parse(price.Replace('.', ','));
        var numberChange = Math.Round(numberMoney - numberPrice, 2);

        price = numberMoney >= numberPrice ? $"Rückgeld: { numberChange }" : $"Fehlend: { numberChange }";

        var context = DbContextFactory.CreateDbContext();
        var time = DateTime.Now;
        var cashbox = context.Cashboxes.First(x => x.Id == CashboxId);
        foreach (var (product, _) in _products)
        {
            context.Sales.Add(new()
            {
                DateTime = time,
                FkEventId = EventId,
                FkProductId = product.Id,
                FkCashboxId = CashboxId
            });
            cashbox.Money += context.EventsProducts.First(x => x.FkProductId == product.Id).Price.HasValue ? context.EventsProducts.First(x => x.FkProductId == product.Id).Price!.Value : product.DefaultPrice;
        }
        context.SaveChanges();
        _products.Clear();
    }

    private void Expand()
    {
        if (!string.IsNullOrWhiteSpace(expanded))
        {
            expanded = string.Empty;
            return;
        }
        if (_products.Count != 0)
        {
            expanded = "show";
            return;
        }
    }
}
